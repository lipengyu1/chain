<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxn.chain.dao.ShopDao">
    <insert id="saveShop" parameterType="com.zxn.chain.dto.ShopDto">
        insert into shop(id,shop_name,shop_num,shop_supplier_id,shop_base,restocking_price,sell_price,quantity,category,remarks,picture,shop_color,shop_tag,shop_subname)
        values (#{id},#{shopName},#{shopNum},#{shopSupplierId},#{shopBase},#{restockingPrice},#{sellPrice},#{quantity},#{category},#{remarks},#{picture},#{shopColor},#{shopTag},#{shopSubname})
    </insert>
    <update id="removeShop" parameterType="com.zxn.chain.entity.Shop">
        update shop
        set status = 0
        where id = #{id}
    </update>
    <select id="queryShopPage" resultType="com.zxn.chain.dto.ShopDto">
        select shop.id,shop_name,shop_num,supplier_name as shop_supplier,shop_supplier_id,shop_base,restocking_price,sell_price,quantity,category,shop.remarks,picture,shop_color,shop_tag,shop_subname
        from shop
        left join
        supplier
        on shop.shop_supplier_id = supplier.id
        <where>
            shop.status = 1
            <if test="shopName != null and shopName!= ''" >
                and shop_name = #{shopName}
            </if>
            <if test="category != null and category!= ''" >
                and category = #{category}
            </if>
        </where>
        order by id  limit ${pageNo}, ${pageSize};
    </select>
    <select id="queryShopCount"  resultType="java.lang.Integer">
        select count(*)
        from shop
        <where>
            status = 1
            <if test="shopName != null and shopName!= ''" >
                and shop_name = #{shopName}
            </if>
            <if test="category != null and category!= ''" >
                and category = #{category}
            </if>
        </where>
    </select>
    <update id="updateShop" parameterType="com.zxn.chain.dto.ShopDto">
        update shop
        set shop_name = #{shopName},
            shop_num = #{shopNum},
            shop_supplier_id = #{shopSupplierId},
            shop_base = #{shopBase},
            restocking_price = #{restockingPrice},
            sell_price = #{sellPrice},
            picture = #{picture},
            quantity = #{quantity},
            category = #{category},
            remarks = #{remarks},
            shop_color = #{shopColor},
            shop_tag = #{shopTag},
            shop_subname = #{shopSubname},
        where id = #{id}
    </update>
    <select id="selectShopById" resultType="com.zxn.chain.dto.ShopDto">
        select id,shop_name,shop_num,shop_supplier_id,shop_base,restocking_price,sell_price,quantity,category,remarks,picture,shop_color,shop_tag,shop_subname
        from shop
        where id = #{id} and status = 1;
    </select>
    <select id="selectShopBySupplierId" resultType="com.zxn.chain.dto.ShopDto">
        select shop_supplier_id
        from shop
        where shop_supplier_id = #{id} and status = 1;
    </select>
    <select id="selectShopNameByShopId" resultType="com.zxn.chain.entity.Shop">
        select shop_name,shop_base,quantity from shop
        where shop_num = #{shopId} and status = 1;
    </select>
    <select id="querySellPrice" resultType="decimal">
        select sell_price from shop where shop_num = #{shopNum};
    </select>
    <update id="delSalNum" parameterType="com.zxn.chain.entity.Stock">
        update shop
        set quantity = quantity-#{shopQuantity}
        where shop_num = #{shopNum};
    </update>
    <select id="getRemainder" resultType="java.lang.Integer">
        select quantity from shop where shop_num = #{shopNum};
    </select>
    <update id="addSalNum" parameterType="com.zxn.chain.entity.Stock">
        update shop
        set quantity = quantity+#{shopQuantity}
        where shop_num = #{shopNum};
    </update>
    <select id="selectShopByNum" resultType="com.zxn.chain.dto.ShopDto">
        select id,shop_name,shop_num,shop_supplier_id,shop_base,restocking_price,sell_price,quantity,category,remarks,picture,shop_color,shop_tag,shop_subname
        from shop
        where shop_num = #{shopNum} and status = 1;
    </select>
    <select id="queryShop" resultType="com.zxn.chain.dto.ShopKeyQueryDto">
        select id,shop_name,shop_num,shop_supplier_id,shop_base,restocking_price,sell_price,quantity,category,remarks,picture,shop_color,shop_tag,shop_subname
        from shop
        where shop_name like '%${keyWords}%';
    </select>
</mapper>